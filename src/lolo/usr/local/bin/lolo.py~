#!/usr/bin/python

"""
Button sensor & status updater
"""

import os
import sys
import json
import time
import k8055
import subprocess

class ButtonBoard(k8055.Board):
    def __init__(self, address=0):
        k8055.Board.__init__(self, address)
    
    def waiting(self):
        if board.digital_inputs[0]:
            print "script success!"
            lolo = LoloStatus()
            lolo.change_status()
            time.sleep(5)

    def run(self):
        while True:
        	self.read()
        	self.read()
	        board.waiting()

class LoloStatus():
	def __init__(self):
		self.FILENAME = "/home/padraic/Dropbox/lolo/src/lolo/json/status.json"

	def change_status(self):
		'''Changes status'''
	
		# pulls in previous Labs status (reads from JSON file)
		status = self.load_status()

		# changes status between open & closed (Boolean)
		# toggles symbolic link between open & closed image as current status image
		if status['open'] is True:
			status['open'] = False
			status['status'] = "091 Labs is closed atm!"
			subprocess.call(["ln","-sf","/var/www/lolo/images/closed.png","/var/www/lolo/images/status.png"])
		else:
			status['open'] = True
			status['status'] = "091 Labs is open!"
			subprocess.call(["ln","-sf","/var/www/lolo/images/open.png","/var/www/lolo/images/status.png"])
		
		# sends on the current Labs status (writes back to JSON file)
		self.save_status(status)

	def load_status(self):
		'''Loads JSON data from FILENAME'''
	
		with open(self.FILENAME, "r") as FILE:
			data = FILE.read()		
		return json.loads(data)		# JSON formatted data converted in python object
	
	def save_status(self, status):
		'''Writes JSON data to FILENAME'''
	
		with open(self.FILENAME, "w") as FILE:
			data = json.dumps(status)	# python object converted into JSON formatted data
			FILE.write(data)

if __name__ == '__main__':
	board = ButtonBoard()
	board.run()
